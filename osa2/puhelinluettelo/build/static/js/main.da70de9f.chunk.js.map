{"version":3,"sources":["components/PersonLista.js","services/persons.js","components/PForm.js","components/FForm.js","components/Notification.js","App.js","index.js"],"names":["Person","props","key","name","person","number","onClick","event","deleteNumber","id","PersonLista","personsToShow","persons","filter","p","toLowerCase","includes","newFilter","map","baseUrl","axios","get","then","response","data","newObject","post","delete","PForm","setPersons","newName","setNewName","newNumber","setNewNumber","handleNameChange","handleNumberChange","setMessage","onSubmit","preventDefault","personObject","persoona","indexOf","window","alert","personService","returned","concat","setTimeout","value","onChange","type","FForm","handleFilterChange","Notification","message","className","App","useState","setNewFilter","useEffect","console","log","length","target","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da70de9f.chunk.js","sourcesContent":["import React from 'react'\r\nconst Person = (props) =>{\r\n    \r\n    return(\r\n        <li key={props.name}>{props.person.name} {props.person.number} \r\n        <button onClick={(event) => props.deleteNumber(props.person.id)}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst PersonLista = (props) => {\r\n\r\n    const personsToShow = props.persons.filter(p => p.name.toLowerCase().includes(props.newFilter.toLowerCase()))\r\n\r\n    const numerot = () => personsToShow.map(\r\n        person => <Person key={person.id} person={person} deleteNumber={props.deleteNumber} />\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n                {numerot()}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonLista","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst destroy = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\nexport default { getAll, create, update, destroy }","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\n\r\nconst PForm = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber, handleNameChange, handleNumberChange, setMessage}) => {\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const personObject = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        if (persons.map(persoona => persoona.name.toLowerCase()).indexOf(newName.toLowerCase()) !== -1) {\r\n          window.alert(`${personObject.name} is already added to phonebook`)\r\n        }\r\n        else\r\n        personService\r\n        .create(personObject)\r\n        .then(returned => {\r\n          setPersons(persons.concat(returned))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .then(setMessage('Number was succesfully added!'))\r\n        setTimeout(()=>{\r\n          setMessage(null)\r\n        }, 5000)\r\n      }\r\n\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input\r\n            value={newName}\r\n            onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PForm","import React from 'react'\r\n\r\nconst FForm = (props) => {\r\n    return(\r\n        <div>\r\n        filter: <input\r\n          value={props.newFilter}\r\n          onChange={props.handleFilterChange}\r\n        />\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default FForm","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport PersonLista from './components/PersonLista'\nimport PForm from './components/PForm'\nimport FForm from './components/FForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  console.log('render', persons.length, 'persons')\n\n\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const deleteNumber = (id) => {\n    const result = window.confirm(\"Do you want to delete this number?\")\n    if (result) {\n      personService\n        .destroy(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .then(setMessage('Number deleted succesfully'))\n        setTimeout(()=>{\n          setMessage(null)\n        }, 5000)\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <FForm handleFilterChange={handleFilterChange} />\n      <h2>add new number</h2>\n      <PForm persons={persons} setPersons={setPersons} newName={newName}\n        setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} setMessage={setMessage} />\n      <PersonLista persons={persons} newFilter={newFilter} deleteNumber={deleteNumber} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}